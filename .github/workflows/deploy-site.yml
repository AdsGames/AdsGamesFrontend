name: Build, Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build and Deploy Project
    runs-on: ubuntu-latest
    env:
      SOURCE_DIR: "public"
      AWS_REGION: us-east-1
      AWS_S3_BUCKET: adsgames-hosting
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore node modules from cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn --frozen-lockfile

      - name: Build
        run: yarn build
        env:
          GATSBY_GRAPHQL_ENDPOINT: ${{ secrets.GATSBY_GRAPHQL_ENDPOINT_STAGE }}
          GATSBY_STRIPE_PUBLIC_KEY: ${{ secrets.GATSBY_STRIPE_PUBLIC_KEY_STAGE }}

      - name: Deploy cached items
        uses: jakejarvis/s3-sync-action@master
        with:
          args: >-
            --acl public-read
            --cache-control 'max-age=31536000'
            --exclude '*.html'
            --exclude '*.json'
            --exclude '*.js'
            --exclude '*.css'
            --exclude '*.svg'
            --delete

      - name: Deploy non-cached items
        uses: jakejarvis/s3-sync-action@master
        with:
          args: >-
            --acl public-read
            --cache-control 'max-age=0,no-cache,no-store,must-revalidate'
            --content-encoding gzip
            --exclude '*'
            --include '*.html'
            --include '*.json'
            --delete

      - name: Deploy cached gzipped items
        uses: jakejarvis/s3-sync-action@master
        with:
          args: >-
            --acl public-read
            --cache-control 'max-age=31536000'
            --content-encoding gzip
            --exclude '*'
            --include '*.js'
            --include '*.css'
            --include '*.svg'
            --delete
